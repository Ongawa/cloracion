/**
 * This class is generated by jOOQ
 */
package org.ongawa.peru.chlorination.persistence.db.jooq.tables;


import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Identity;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.TableImpl;
import org.ongawa.peru.chlorination.persistence.db.jooq.Keys;
import org.ongawa.peru.chlorination.persistence.db.jooq.Public;
import org.ongawa.peru.chlorination.persistence.db.jooq.tables.records.PipeRecord;


/**
 * This class is generated by jOOQ.
 */
@Generated(
	value = {
		"http://www.jooq.org",
		"jOOQ version:3.7.2"
	},
	comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Pipe extends TableImpl<PipeRecord> {

	private static final long serialVersionUID = 1440694500;

	/**
	 * The reference instance of <code>PUBLIC.PIPE</code>
	 */
	public static final Pipe PIPE = new Pipe();

	/**
	 * The class holding records for this type
	 */
	@Override
	public Class<PipeRecord> getRecordType() {
		return PipeRecord.class;
	}

	/**
	 * The column <code>PUBLIC.PIPE.IDPIPE</code>.
	 */
	public final TableField<PipeRecord, Integer> IDPIPE = createField("IDPIPE", org.jooq.impl.SQLDataType.INTEGER.nullable(false).defaulted(true), this, "");

	/**
	 * The column <code>PUBLIC.PIPE.WATERSYSTEM_IDWATERSYSTEM</code>.
	 */
	public final TableField<PipeRecord, Integer> WATERSYSTEM_IDWATERSYSTEM = createField("WATERSYSTEM_IDWATERSYSTEM", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

	/**
	 * The column <code>PUBLIC.PIPE.WATERSYSTEM_COMMUNITY_IDCOMMUNITY</code>.
	 */
	public final TableField<PipeRecord, Integer> WATERSYSTEM_COMMUNITY_IDCOMMUNITY = createField("WATERSYSTEM_COMMUNITY_IDCOMMUNITY", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

	/**
	 * The column <code>PUBLIC.PIPE.WATERSYSTEM_COMMUNITY_SUBBASIN_IDSUBBASIN</code>.
	 */
	public final TableField<PipeRecord, Integer> WATERSYSTEM_COMMUNITY_SUBBASIN_IDSUBBASIN = createField("WATERSYSTEM_COMMUNITY_SUBBASIN_IDSUBBASIN", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

	/**
	 * The column <code>PUBLIC.PIPE.NAME</code>.
	 */
	public final TableField<PipeRecord, String> NAME = createField("NAME", org.jooq.impl.SQLDataType.VARCHAR.length(100), this, "");

	/**
	 * The column <code>PUBLIC.PIPE.DIAMETER</code>.
	 */
	public final TableField<PipeRecord, Double> DIAMETER = createField("DIAMETER", org.jooq.impl.SQLDataType.DOUBLE.nullable(false), this, "");

	/**
	 * The column <code>PUBLIC.PIPE.LENGTH</code>.
	 */
	public final TableField<PipeRecord, Double> LENGTH = createField("LENGTH", org.jooq.impl.SQLDataType.DOUBLE.nullable(false), this, "");

	/**
	 * The column <code>PUBLIC.PIPE.COUNT</code>.
	 */
	public final TableField<PipeRecord, Integer> COUNT = createField("COUNT", org.jooq.impl.SQLDataType.INTEGER, this, "");

	/**
	 * Create a <code>PUBLIC.PIPE</code> table reference
	 */
	public Pipe() {
		this("PIPE", null);
	}

	/**
	 * Create an aliased <code>PUBLIC.PIPE</code> table reference
	 */
	public Pipe(String alias) {
		this(alias, PIPE);
	}

	private Pipe(String alias, Table<PipeRecord> aliased) {
		this(alias, aliased, null);
	}

	private Pipe(String alias, Table<PipeRecord> aliased, Field<?>[] parameters) {
		super(alias, Public.PUBLIC, aliased, parameters, "");
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Identity<PipeRecord, Integer> getIdentity() {
		return Keys.IDENTITY_PIPE;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public UniqueKey<PipeRecord> getPrimaryKey() {
		return Keys.CONSTRAINT_25;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public List<UniqueKey<PipeRecord>> getKeys() {
		return Arrays.<UniqueKey<PipeRecord>>asList(Keys.CONSTRAINT_25);
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public List<ForeignKey<PipeRecord, ?>> getReferences() {
		return Arrays.<ForeignKey<PipeRecord, ?>>asList(Keys.FK_PIPE_WATERSYSTEM1);
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Pipe as(String alias) {
		return new Pipe(alias, this);
	}

	/**
	 * Rename this table
	 */
	public Pipe rename(String name) {
		return new Pipe(name, null);
	}
}
