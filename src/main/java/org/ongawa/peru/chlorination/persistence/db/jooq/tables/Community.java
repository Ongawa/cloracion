/**
 * This class is generated by jOOQ
 */
package org.ongawa.peru.chlorination.persistence.db.jooq.tables;


import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Identity;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.TableImpl;
import org.ongawa.peru.chlorination.persistence.db.jooq.Keys;
import org.ongawa.peru.chlorination.persistence.db.jooq.Public;
import org.ongawa.peru.chlorination.persistence.db.jooq.tables.records.CommunityRecord;


/**
 * This class is generated by jOOQ.
 */
@Generated(
	value = {
		"http://www.jooq.org",
		"jOOQ version:3.7.2"
	},
	comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Community extends TableImpl<CommunityRecord> {

	private static final long serialVersionUID = -1530778105;

	/**
	 * The reference instance of <code>PUBLIC.COMMUNITY</code>
	 */
	public static final Community COMMUNITY = new Community();

	/**
	 * The class holding records for this type
	 */
	@Override
	public Class<CommunityRecord> getRecordType() {
		return CommunityRecord.class;
	}

	/**
	 * The column <code>PUBLIC.COMMUNITY.IDCOMMUNITY</code>.
	 */
	public final TableField<CommunityRecord, Integer> IDCOMMUNITY = createField("IDCOMMUNITY", org.jooq.impl.SQLDataType.INTEGER.nullable(false).defaulted(true), this, "");

	/**
	 * The column <code>PUBLIC.COMMUNITY.SUBBASIN_IDSUBBASIN</code>.
	 */
	public final TableField<CommunityRecord, Integer> SUBBASIN_IDSUBBASIN = createField("SUBBASIN_IDSUBBASIN", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

	/**
	 * The column <code>PUBLIC.COMMUNITY.NAME</code>.
	 */
	public final TableField<CommunityRecord, String> NAME = createField("NAME", org.jooq.impl.SQLDataType.VARCHAR.length(45).nullable(false), this, "");

	/**
	 * Create a <code>PUBLIC.COMMUNITY</code> table reference
	 */
	public Community() {
		this("COMMUNITY", null);
	}

	/**
	 * Create an aliased <code>PUBLIC.COMMUNITY</code> table reference
	 */
	public Community(String alias) {
		this(alias, COMMUNITY);
	}

	private Community(String alias, Table<CommunityRecord> aliased) {
		this(alias, aliased, null);
	}

	private Community(String alias, Table<CommunityRecord> aliased, Field<?>[] parameters) {
		super(alias, Public.PUBLIC, aliased, parameters, "");
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Identity<CommunityRecord, Integer> getIdentity() {
		return Keys.IDENTITY_COMMUNITY;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public UniqueKey<CommunityRecord> getPrimaryKey() {
		return Keys.CONSTRAINT_4;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public List<UniqueKey<CommunityRecord>> getKeys() {
		return Arrays.<UniqueKey<CommunityRecord>>asList(Keys.CONSTRAINT_4);
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public List<ForeignKey<CommunityRecord, ?>> getReferences() {
		return Arrays.<ForeignKey<CommunityRecord, ?>>asList(Keys.FK_COMMUNITY_SUBBASIN1);
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Community as(String alias) {
		return new Community(alias, this);
	}

	/**
	 * Rename this table
	 */
	public Community rename(String name) {
		return new Community(name, null);
	}
}
