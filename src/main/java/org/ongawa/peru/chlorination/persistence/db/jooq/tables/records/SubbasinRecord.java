/**
 * This class is generated by jOOQ
 */
package org.ongawa.peru.chlorination.persistence.db.jooq.tables.records;


import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record2;
import org.jooq.Row2;
import org.jooq.impl.UpdatableRecordImpl;
import org.ongawa.peru.chlorination.persistence.db.jooq.tables.Subbasin;


/**
 * This class is generated by jOOQ.
 */
@Generated(
	value = {
		"http://www.jooq.org",
		"jOOQ version:3.7.2"
	},
	comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class SubbasinRecord extends UpdatableRecordImpl<SubbasinRecord> implements Record2<Integer, String> {

	private static final long serialVersionUID = -211837301;

	/**
	 * Setter for <code>PUBLIC.SUBBASIN.IDSUBBASIN</code>.
	 */
	public void setIdsubbasin(Integer value) {
		setValue(0, value);
	}

	/**
	 * Getter for <code>PUBLIC.SUBBASIN.IDSUBBASIN</code>.
	 */
	public Integer getIdsubbasin() {
		return (Integer) getValue(0);
	}

	/**
	 * Setter for <code>PUBLIC.SUBBASIN.NAME</code>.
	 */
	public void setName(String value) {
		setValue(1, value);
	}

	/**
	 * Getter for <code>PUBLIC.SUBBASIN.NAME</code>.
	 */
	public String getName() {
		return (String) getValue(1);
	}

	// -------------------------------------------------------------------------
	// Primary key information
	// -------------------------------------------------------------------------

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Record1<Integer> key() {
		return (Record1) super.key();
	}

	// -------------------------------------------------------------------------
	// Record2 type implementation
	// -------------------------------------------------------------------------

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Row2<Integer, String> fieldsRow() {
		return (Row2) super.fieldsRow();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Row2<Integer, String> valuesRow() {
		return (Row2) super.valuesRow();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<Integer> field1() {
		return Subbasin.SUBBASIN.IDSUBBASIN;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<String> field2() {
		return Subbasin.SUBBASIN.NAME;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Integer value1() {
		return getIdsubbasin();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public String value2() {
		return getName();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public SubbasinRecord value1(Integer value) {
		setIdsubbasin(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public SubbasinRecord value2(String value) {
		setName(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public SubbasinRecord values(Integer value1, String value2) {
		value1(value1);
		value2(value2);
		return this;
	}

	// -------------------------------------------------------------------------
	// Constructors
	// -------------------------------------------------------------------------

	/**
	 * Create a detached SubbasinRecord
	 */
	public SubbasinRecord() {
		super(Subbasin.SUBBASIN);
	}

	/**
	 * Create a detached, initialised SubbasinRecord
	 */
	public SubbasinRecord(Integer idsubbasin, String name) {
		super(Subbasin.SUBBASIN);

		setValue(0, idsubbasin);
		setValue(1, name);
	}
}
