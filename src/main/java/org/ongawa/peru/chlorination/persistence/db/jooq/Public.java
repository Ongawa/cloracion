/**
 * This class is generated by jOOQ
 */
package org.ongawa.peru.chlorination.persistence.db.jooq;


import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Sequence;
import org.jooq.Table;
import org.jooq.impl.SchemaImpl;
import org.ongawa.peru.chlorination.persistence.db.jooq.tables.Chlorinecalculation;
import org.ongawa.peru.chlorination.persistence.db.jooq.tables.Community;
import org.ongawa.peru.chlorination.persistence.db.jooq.tables.Measuredflow;
import org.ongawa.peru.chlorination.persistence.db.jooq.tables.Measuringpoint;
import org.ongawa.peru.chlorination.persistence.db.jooq.tables.Subbasin;
import org.ongawa.peru.chlorination.persistence.db.jooq.tables.Waterspring;
import org.ongawa.peru.chlorination.persistence.db.jooq.tables.Watersystem;
import org.ongawa.peru.chlorination.persistence.db.jooq.tables.WatersystemHasWaterspring;


/**
 * This class is generated by jOOQ.
 */
@Generated(
	value = {
		"http://www.jooq.org",
		"jOOQ version:3.7.2"
	},
	comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Public extends SchemaImpl {

	private static final long serialVersionUID = 1848372792;

	/**
	 * The reference instance of <code>PUBLIC</code>
	 */
	public static final Public PUBLIC = new Public();

	/**
	 * No further instances allowed
	 */
	private Public() {
		super("PUBLIC");
	}

	@Override
	public final List<Sequence<?>> getSequences() {
		List result = new ArrayList();
		result.addAll(getSequences0());
		return result;
	}

	private final List<Sequence<?>> getSequences0() {
		return Arrays.<Sequence<?>>asList(
			Sequences.SYSTEM_SEQUENCE_0687B4F4_76CC_4CE6_8B80_95C879B4557A,
			Sequences.SYSTEM_SEQUENCE_580EC260_9394_4A50_9D09_A050CECFEE6E,
			Sequences.SYSTEM_SEQUENCE_66F2B74E_20E4_44B5_AA2B_425ED28743C9,
			Sequences.SYSTEM_SEQUENCE_A1BC363C_AE00_4B2D_A80D_DD0F7DC4858D,
			Sequences.SYSTEM_SEQUENCE_B6ECB91C_238D_4D7C_BD6A_9C36596EEBFE);
	}

	@Override
	public final List<Table<?>> getTables() {
		List result = new ArrayList();
		result.addAll(getTables0());
		return result;
	}

	private final List<Table<?>> getTables0() {
		return Arrays.<Table<?>>asList(
			Subbasin.SUBBASIN,
			Community.COMMUNITY,
			Watersystem.WATERSYSTEM,
			Waterspring.WATERSPRING,
			WatersystemHasWaterspring.WATERSYSTEM_HAS_WATERSPRING,
			Measuringpoint.MEASURINGPOINT,
			Measuredflow.MEASUREDFLOW,
			Chlorinecalculation.CHLORINECALCULATION);
	}
}
