/**
 * This class is generated by jOOQ
 */
package org.ongawa.peru.chlorination.persistence.db.jooq.tables;


import java.sql.Timestamp;
import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.TableImpl;
import org.ongawa.peru.chlorination.persistence.db.jooq.Keys;
import org.ongawa.peru.chlorination.persistence.db.jooq.Public;
import org.ongawa.peru.chlorination.persistence.db.jooq.tables.records.CatchmentdesinfectionRecord;


/**
 * This class is generated by jOOQ.
 */
@Generated(
	value = {
		"http://www.jooq.org",
		"jOOQ version:3.7.2"
	},
	comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Catchmentdesinfection extends TableImpl<CatchmentdesinfectionRecord> {

	private static final long serialVersionUID = 482462821;

	/**
	 * The reference instance of <code>PUBLIC.CATCHMENTDESINFECTION</code>
	 */
	public static final Catchmentdesinfection CATCHMENTDESINFECTION = new Catchmentdesinfection();

	/**
	 * The class holding records for this type
	 */
	@Override
	public Class<CatchmentdesinfectionRecord> getRecordType() {
		return CatchmentdesinfectionRecord.class;
	}

	/**
	 * The column <code>PUBLIC.CATCHMENTDESINFECTION.DESINFECTION_DATE</code>.
	 */
	public final TableField<CatchmentdesinfectionRecord, Timestamp> DESINFECTION_DATE = createField("DESINFECTION_DATE", org.jooq.impl.SQLDataType.TIMESTAMP.nullable(false), this, "");

	/**
	 * The column <code>PUBLIC.CATCHMENTDESINFECTION.CATCHMENT_IDCATCHMENT</code>.
	 */
	public final TableField<CatchmentdesinfectionRecord, Integer> CATCHMENT_IDCATCHMENT = createField("CATCHMENT_IDCATCHMENT", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

	/**
	 * The column <code>PUBLIC.CATCHMENTDESINFECTION.WATERSYSTEM_IDWATERSYSTEM</code>.
	 */
	public final TableField<CatchmentdesinfectionRecord, Integer> WATERSYSTEM_IDWATERSYSTEM = createField("WATERSYSTEM_IDWATERSYSTEM", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

	/**
	 * The column <code>PUBLIC.CATCHMENTDESINFECTION.WATERSYSTEM_COMMUNITY_IDCOMMUNITY</code>.
	 */
	public final TableField<CatchmentdesinfectionRecord, Integer> WATERSYSTEM_COMMUNITY_IDCOMMUNITY = createField("WATERSYSTEM_COMMUNITY_IDCOMMUNITY", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

	/**
	 * The column <code>PUBLIC.CATCHMENTDESINFECTION.WATERSYSTEM_COMMUNITY_SUBBASIN_IDSUBBASIN</code>.
	 */
	public final TableField<CatchmentdesinfectionRecord, Integer> WATERSYSTEM_COMMUNITY_SUBBASIN_IDSUBBASIN = createField("WATERSYSTEM_COMMUNITY_SUBBASIN_IDSUBBASIN", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

	/**
	 * The column <code>PUBLIC.CATCHMENTDESINFECTION.COUNT</code>.
	 */
	public final TableField<CatchmentdesinfectionRecord, Integer> COUNT = createField("COUNT", org.jooq.impl.SQLDataType.INTEGER.nullable(false).defaulted(true), this, "");

	/**
	 * The column <code>PUBLIC.CATCHMENTDESINFECTION.CHLORINEQTY</code>.
	 */
	public final TableField<CatchmentdesinfectionRecord, Double> CHLORINEQTY = createField("CHLORINEQTY", org.jooq.impl.SQLDataType.DOUBLE.nullable(false), this, "");

	/**
	 * The column <code>PUBLIC.CATCHMENTDESINFECTION.DEMANDSPOONS</code>.
	 */
	public final TableField<CatchmentdesinfectionRecord, Double> DEMANDSPOONS = createField("DEMANDSPOONS", org.jooq.impl.SQLDataType.DOUBLE.nullable(false), this, "");

	/**
	 * The column <code>PUBLIC.CATCHMENTDESINFECTION.RETENTIONTIME</code>.
	 */
	public final TableField<CatchmentdesinfectionRecord, Double> RETENTIONTIME = createField("RETENTIONTIME", org.jooq.impl.SQLDataType.DOUBLE.nullable(false), this, "");

	/**
	 * Create a <code>PUBLIC.CATCHMENTDESINFECTION</code> table reference
	 */
	public Catchmentdesinfection() {
		this("CATCHMENTDESINFECTION", null);
	}

	/**
	 * Create an aliased <code>PUBLIC.CATCHMENTDESINFECTION</code> table reference
	 */
	public Catchmentdesinfection(String alias) {
		this(alias, CATCHMENTDESINFECTION);
	}

	private Catchmentdesinfection(String alias, Table<CatchmentdesinfectionRecord> aliased) {
		this(alias, aliased, null);
	}

	private Catchmentdesinfection(String alias, Table<CatchmentdesinfectionRecord> aliased, Field<?>[] parameters) {
		super(alias, Public.PUBLIC, aliased, parameters, "");
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public UniqueKey<CatchmentdesinfectionRecord> getPrimaryKey() {
		return Keys.CONSTRAINT_1E;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public List<UniqueKey<CatchmentdesinfectionRecord>> getKeys() {
		return Arrays.<UniqueKey<CatchmentdesinfectionRecord>>asList(Keys.CONSTRAINT_1E);
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public List<ForeignKey<CatchmentdesinfectionRecord, ?>> getReferences() {
		return Arrays.<ForeignKey<CatchmentdesinfectionRecord, ?>>asList(Keys.FK_CATCHMENTDESINFECTION_DESINFECTION1);
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Catchmentdesinfection as(String alias) {
		return new Catchmentdesinfection(alias, this);
	}

	/**
	 * Rename this table
	 */
	public Catchmentdesinfection rename(String name) {
		return new Catchmentdesinfection(name, null);
	}
}
