/**
 * This class is generated by jOOQ
 */
package org.ongawa.peru.chlorination.persistence.db.jooq.tables.records;


import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Record4;
import org.jooq.Record8;
import org.jooq.Row8;
import org.jooq.impl.UpdatableRecordImpl;
import org.ongawa.peru.chlorination.persistence.db.jooq.tables.Pipe;


/**
 * This class is generated by jOOQ.
 */
@Generated(
	value = {
		"http://www.jooq.org",
		"jOOQ version:3.7.2"
	},
	comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class PipeRecord extends UpdatableRecordImpl<PipeRecord> implements Record8<Integer, Integer, Integer, Integer, String, Double, Double, Integer> {

	private static final long serialVersionUID = -1073867288;

	/**
	 * Setter for <code>PUBLIC.PIPE.IDPIPE</code>.
	 */
	public void setIdpipe(Integer value) {
		setValue(0, value);
	}

	/**
	 * Getter for <code>PUBLIC.PIPE.IDPIPE</code>.
	 */
	public Integer getIdpipe() {
		return (Integer) getValue(0);
	}

	/**
	 * Setter for <code>PUBLIC.PIPE.WATERSYSTEM_IDWATERSYSTEM</code>.
	 */
	public void setWatersystemIdwatersystem(Integer value) {
		setValue(1, value);
	}

	/**
	 * Getter for <code>PUBLIC.PIPE.WATERSYSTEM_IDWATERSYSTEM</code>.
	 */
	public Integer getWatersystemIdwatersystem() {
		return (Integer) getValue(1);
	}

	/**
	 * Setter for <code>PUBLIC.PIPE.WATERSYSTEM_COMMUNITY_IDCOMMUNITY</code>.
	 */
	public void setWatersystemCommunityIdcommunity(Integer value) {
		setValue(2, value);
	}

	/**
	 * Getter for <code>PUBLIC.PIPE.WATERSYSTEM_COMMUNITY_IDCOMMUNITY</code>.
	 */
	public Integer getWatersystemCommunityIdcommunity() {
		return (Integer) getValue(2);
	}

	/**
	 * Setter for <code>PUBLIC.PIPE.WATERSYSTEM_COMMUNITY_SUBBASIN_IDSUBBASIN</code>.
	 */
	public void setWatersystemCommunitySubbasinIdsubbasin(Integer value) {
		setValue(3, value);
	}

	/**
	 * Getter for <code>PUBLIC.PIPE.WATERSYSTEM_COMMUNITY_SUBBASIN_IDSUBBASIN</code>.
	 */
	public Integer getWatersystemCommunitySubbasinIdsubbasin() {
		return (Integer) getValue(3);
	}

	/**
	 * Setter for <code>PUBLIC.PIPE.NAME</code>.
	 */
	public void setName(String value) {
		setValue(4, value);
	}

	/**
	 * Getter for <code>PUBLIC.PIPE.NAME</code>.
	 */
	public String getName() {
		return (String) getValue(4);
	}

	/**
	 * Setter for <code>PUBLIC.PIPE.DIAMETER</code>.
	 */
	public void setDiameter(Double value) {
		setValue(5, value);
	}

	/**
	 * Getter for <code>PUBLIC.PIPE.DIAMETER</code>.
	 */
	public Double getDiameter() {
		return (Double) getValue(5);
	}

	/**
	 * Setter for <code>PUBLIC.PIPE.LENGTH</code>.
	 */
	public void setLength(Double value) {
		setValue(6, value);
	}

	/**
	 * Getter for <code>PUBLIC.PIPE.LENGTH</code>.
	 */
	public Double getLength() {
		return (Double) getValue(6);
	}

	/**
	 * Setter for <code>PUBLIC.PIPE.COUNT</code>.
	 */
	public void setCount(Integer value) {
		setValue(7, value);
	}

	/**
	 * Getter for <code>PUBLIC.PIPE.COUNT</code>.
	 */
	public Integer getCount() {
		return (Integer) getValue(7);
	}

	// -------------------------------------------------------------------------
	// Primary key information
	// -------------------------------------------------------------------------

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Record4<Integer, Integer, Integer, Integer> key() {
		return (Record4) super.key();
	}

	// -------------------------------------------------------------------------
	// Record8 type implementation
	// -------------------------------------------------------------------------

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Row8<Integer, Integer, Integer, Integer, String, Double, Double, Integer> fieldsRow() {
		return (Row8) super.fieldsRow();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Row8<Integer, Integer, Integer, Integer, String, Double, Double, Integer> valuesRow() {
		return (Row8) super.valuesRow();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<Integer> field1() {
		return Pipe.PIPE.IDPIPE;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<Integer> field2() {
		return Pipe.PIPE.WATERSYSTEM_IDWATERSYSTEM;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<Integer> field3() {
		return Pipe.PIPE.WATERSYSTEM_COMMUNITY_IDCOMMUNITY;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<Integer> field4() {
		return Pipe.PIPE.WATERSYSTEM_COMMUNITY_SUBBASIN_IDSUBBASIN;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<String> field5() {
		return Pipe.PIPE.NAME;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<Double> field6() {
		return Pipe.PIPE.DIAMETER;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<Double> field7() {
		return Pipe.PIPE.LENGTH;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<Integer> field8() {
		return Pipe.PIPE.COUNT;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Integer value1() {
		return getIdpipe();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Integer value2() {
		return getWatersystemIdwatersystem();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Integer value3() {
		return getWatersystemCommunityIdcommunity();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Integer value4() {
		return getWatersystemCommunitySubbasinIdsubbasin();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public String value5() {
		return getName();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Double value6() {
		return getDiameter();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Double value7() {
		return getLength();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Integer value8() {
		return getCount();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public PipeRecord value1(Integer value) {
		setIdpipe(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public PipeRecord value2(Integer value) {
		setWatersystemIdwatersystem(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public PipeRecord value3(Integer value) {
		setWatersystemCommunityIdcommunity(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public PipeRecord value4(Integer value) {
		setWatersystemCommunitySubbasinIdsubbasin(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public PipeRecord value5(String value) {
		setName(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public PipeRecord value6(Double value) {
		setDiameter(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public PipeRecord value7(Double value) {
		setLength(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public PipeRecord value8(Integer value) {
		setCount(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public PipeRecord values(Integer value1, Integer value2, Integer value3, Integer value4, String value5, Double value6, Double value7, Integer value8) {
		value1(value1);
		value2(value2);
		value3(value3);
		value4(value4);
		value5(value5);
		value6(value6);
		value7(value7);
		value8(value8);
		return this;
	}

	// -------------------------------------------------------------------------
	// Constructors
	// -------------------------------------------------------------------------

	/**
	 * Create a detached PipeRecord
	 */
	public PipeRecord() {
		super(Pipe.PIPE);
	}

	/**
	 * Create a detached, initialised PipeRecord
	 */
	public PipeRecord(Integer idpipe, Integer watersystemIdwatersystem, Integer watersystemCommunityIdcommunity, Integer watersystemCommunitySubbasinIdsubbasin, String name, Double diameter, Double length, Integer count) {
		super(Pipe.PIPE);

		setValue(0, idpipe);
		setValue(1, watersystemIdwatersystem);
		setValue(2, watersystemCommunityIdcommunity);
		setValue(3, watersystemCommunitySubbasinIdsubbasin);
		setValue(4, name);
		setValue(5, diameter);
		setValue(6, length);
		setValue(7, count);
	}
}
