/**
 * This class is generated by jOOQ
 */
package org.ongawa.peru.chlorination.persistence.db.jooq.tables.records;


import java.sql.Timestamp;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Record14;
import org.jooq.Record4;
import org.jooq.Row14;
import org.jooq.impl.UpdatableRecordImpl;
import org.ongawa.peru.chlorination.persistence.db.jooq.tables.Chlorinecalculation;


/**
 * This class is generated by jOOQ.
 */
@Generated(
	value = {
		"http://www.jooq.org",
		"jOOQ version:3.7.2"
	},
	comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class ChlorinecalculationRecord extends UpdatableRecordImpl<ChlorinecalculationRecord> implements Record14<Timestamp, Integer, Integer, Integer, String, Short, Short, Short, Byte, Byte, Integer, Byte, Byte, Byte> {

	private static final long serialVersionUID = -831843414;

	/**
	 * Setter for <code>PUBLIC.CHLORINECALCULATION.DATE</code>.
	 */
	public void setDate(Timestamp value) {
		setValue(0, value);
	}

	/**
	 * Getter for <code>PUBLIC.CHLORINECALCULATION.DATE</code>.
	 */
	public Timestamp getDate() {
		return (Timestamp) getValue(0);
	}

	/**
	 * Setter for <code>PUBLIC.CHLORINECALCULATION.WATERSYSTEM_COMMUNITY_IDCOMMUNITY</code>.
	 */
	public void setWatersystemCommunityIdcommunity(Integer value) {
		setValue(1, value);
	}

	/**
	 * Getter for <code>PUBLIC.CHLORINECALCULATION.WATERSYSTEM_COMMUNITY_IDCOMMUNITY</code>.
	 */
	public Integer getWatersystemCommunityIdcommunity() {
		return (Integer) getValue(1);
	}

	/**
	 * Setter for <code>PUBLIC.CHLORINECALCULATION.WATERSYSTEM_IDWATERSYSTEM</code>.
	 */
	public void setWatersystemIdwatersystem(Integer value) {
		setValue(2, value);
	}

	/**
	 * Getter for <code>PUBLIC.CHLORINECALCULATION.WATERSYSTEM_IDWATERSYSTEM</code>.
	 */
	public Integer getWatersystemIdwatersystem() {
		return (Integer) getValue(2);
	}

	/**
	 * Setter for <code>PUBLIC.CHLORINECALCULATION.WATERSYSTEM_COMMUNITY_SUBBASIN_IDSUBBASIN</code>.
	 */
	public void setWatersystemCommunitySubbasinIdsubbasin(Integer value) {
		setValue(3, value);
	}

	/**
	 * Getter for <code>PUBLIC.CHLORINECALCULATION.WATERSYSTEM_COMMUNITY_SUBBASIN_IDSUBBASIN</code>.
	 */
	public Integer getWatersystemCommunitySubbasinIdsubbasin() {
		return (Integer) getValue(3);
	}

	/**
	 * Setter for <code>PUBLIC.CHLORINECALCULATION.POPULATION</code>.
	 */
	public void setPopulation(String value) {
		setValue(4, value);
	}

	/**
	 * Getter for <code>PUBLIC.CHLORINECALCULATION.POPULATION</code>.
	 */
	public String getPopulation() {
		return (String) getValue(4);
	}

	/**
	 * Setter for <code>PUBLIC.CHLORINECALCULATION.TANKVOLUME</code>.
	 */
	public void setTankvolume(Short value) {
		setValue(5, value);
	}

	/**
	 * Getter for <code>PUBLIC.CHLORINECALCULATION.TANKVOLUME</code>.
	 */
	public Short getTankvolume() {
		return (Short) getValue(5);
	}

	/**
	 * Setter for <code>PUBLIC.CHLORINECALCULATION.TANKUSEFULVOLUME</code>.
	 */
	public void setTankusefulvolume(Short value) {
		setValue(6, value);
	}

	/**
	 * Getter for <code>PUBLIC.CHLORINECALCULATION.TANKUSEFULVOLUME</code>.
	 */
	public Short getTankusefulvolume() {
		return (Short) getValue(6);
	}

	/**
	 * Setter for <code>PUBLIC.CHLORINECALCULATION.ENDOWMENT</code>. m^3/persona x dia
	 */
	public void setEndowment(Short value) {
		setValue(7, value);
	}

	/**
	 * Getter for <code>PUBLIC.CHLORINECALCULATION.ENDOWMENT</code>. m^3/persona x dia
	 */
	public Short getEndowment() {
		return (Short) getValue(7);
	}

	/**
	 * Setter for <code>PUBLIC.CHLORINECALCULATION.CHLORINEPURENESS</code>. Expresado en tanto por 1
	 */
	public void setChlorinepureness(Byte value) {
		setValue(8, value);
	}

	/**
	 * Getter for <code>PUBLIC.CHLORINECALCULATION.CHLORINEPURENESS</code>. Expresado en tanto por 1
	 */
	public Byte getChlorinepureness() {
		return (Byte) getValue(8);
	}

	/**
	 * Setter for <code>PUBLIC.CHLORINECALCULATION.INPUTFLOW</code>. Medido en litros/segundo
	 */
	public void setInputflow(Byte value) {
		setValue(9, value);
	}

	/**
	 * Getter for <code>PUBLIC.CHLORINECALCULATION.INPUTFLOW</code>. Medido en litros/segundo
	 */
	public Byte getInputflow() {
		return (Byte) getValue(9);
	}

	/**
	 * Setter for <code>PUBLIC.CHLORINECALCULATION.RELOADTIME</code>. Medido en días
	 */
	public void setReloadtime(Integer value) {
		setValue(10, value);
	}

	/**
	 * Getter for <code>PUBLIC.CHLORINECALCULATION.RELOADTIME</code>. Medido en días
	 */
	public Integer getReloadtime() {
		return (Integer) getValue(10);
	}

	/**
	 * Setter for <code>PUBLIC.CHLORINECALCULATION.DEMANDCLR</code>. Medido en mg/litro
	 */
	public void setDemandclr(Byte value) {
		setValue(11, value);
	}

	/**
	 * Getter for <code>PUBLIC.CHLORINECALCULATION.DEMANDCLR</code>. Medido en mg/litro
	 */
	public Byte getDemandclr() {
		return (Byte) getValue(11);
	}

	/**
	 * Setter for <code>PUBLIC.CHLORINECALCULATION.DEMANDACTIVECHLORINE</code>. Medido en mg/litro
	 */
	public void setDemandactivechlorine(Byte value) {
		setValue(12, value);
	}

	/**
	 * Getter for <code>PUBLIC.CHLORINECALCULATION.DEMANDACTIVECHLORINE</code>. Medido en mg/litro
	 */
	public Byte getDemandactivechlorine() {
		return (Byte) getValue(12);
	}

	/**
	 * Setter for <code>PUBLIC.CHLORINECALCULATION.DEMANDCOMMONPRODUCT</code>. Medido en mg/litro
	 */
	public void setDemandcommonproduct(Byte value) {
		setValue(13, value);
	}

	/**
	 * Getter for <code>PUBLIC.CHLORINECALCULATION.DEMANDCOMMONPRODUCT</code>. Medido en mg/litro
	 */
	public Byte getDemandcommonproduct() {
		return (Byte) getValue(13);
	}

	// -------------------------------------------------------------------------
	// Primary key information
	// -------------------------------------------------------------------------

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Record4<Timestamp, Integer, Integer, Integer> key() {
		return (Record4) super.key();
	}

	// -------------------------------------------------------------------------
	// Record14 type implementation
	// -------------------------------------------------------------------------

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Row14<Timestamp, Integer, Integer, Integer, String, Short, Short, Short, Byte, Byte, Integer, Byte, Byte, Byte> fieldsRow() {
		return (Row14) super.fieldsRow();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Row14<Timestamp, Integer, Integer, Integer, String, Short, Short, Short, Byte, Byte, Integer, Byte, Byte, Byte> valuesRow() {
		return (Row14) super.valuesRow();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<Timestamp> field1() {
		return Chlorinecalculation.CHLORINECALCULATION.DATE;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<Integer> field2() {
		return Chlorinecalculation.CHLORINECALCULATION.WATERSYSTEM_COMMUNITY_IDCOMMUNITY;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<Integer> field3() {
		return Chlorinecalculation.CHLORINECALCULATION.WATERSYSTEM_IDWATERSYSTEM;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<Integer> field4() {
		return Chlorinecalculation.CHLORINECALCULATION.WATERSYSTEM_COMMUNITY_SUBBASIN_IDSUBBASIN;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<String> field5() {
		return Chlorinecalculation.CHLORINECALCULATION.POPULATION;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<Short> field6() {
		return Chlorinecalculation.CHLORINECALCULATION.TANKVOLUME;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<Short> field7() {
		return Chlorinecalculation.CHLORINECALCULATION.TANKUSEFULVOLUME;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<Short> field8() {
		return Chlorinecalculation.CHLORINECALCULATION.ENDOWMENT;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<Byte> field9() {
		return Chlorinecalculation.CHLORINECALCULATION.CHLORINEPURENESS;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<Byte> field10() {
		return Chlorinecalculation.CHLORINECALCULATION.INPUTFLOW;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<Integer> field11() {
		return Chlorinecalculation.CHLORINECALCULATION.RELOADTIME;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<Byte> field12() {
		return Chlorinecalculation.CHLORINECALCULATION.DEMANDCLR;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<Byte> field13() {
		return Chlorinecalculation.CHLORINECALCULATION.DEMANDACTIVECHLORINE;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<Byte> field14() {
		return Chlorinecalculation.CHLORINECALCULATION.DEMANDCOMMONPRODUCT;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Timestamp value1() {
		return getDate();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Integer value2() {
		return getWatersystemCommunityIdcommunity();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Integer value3() {
		return getWatersystemIdwatersystem();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Integer value4() {
		return getWatersystemCommunitySubbasinIdsubbasin();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public String value5() {
		return getPopulation();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Short value6() {
		return getTankvolume();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Short value7() {
		return getTankusefulvolume();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Short value8() {
		return getEndowment();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Byte value9() {
		return getChlorinepureness();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Byte value10() {
		return getInputflow();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Integer value11() {
		return getReloadtime();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Byte value12() {
		return getDemandclr();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Byte value13() {
		return getDemandactivechlorine();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Byte value14() {
		return getDemandcommonproduct();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public ChlorinecalculationRecord value1(Timestamp value) {
		setDate(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public ChlorinecalculationRecord value2(Integer value) {
		setWatersystemCommunityIdcommunity(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public ChlorinecalculationRecord value3(Integer value) {
		setWatersystemIdwatersystem(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public ChlorinecalculationRecord value4(Integer value) {
		setWatersystemCommunitySubbasinIdsubbasin(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public ChlorinecalculationRecord value5(String value) {
		setPopulation(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public ChlorinecalculationRecord value6(Short value) {
		setTankvolume(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public ChlorinecalculationRecord value7(Short value) {
		setTankusefulvolume(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public ChlorinecalculationRecord value8(Short value) {
		setEndowment(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public ChlorinecalculationRecord value9(Byte value) {
		setChlorinepureness(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public ChlorinecalculationRecord value10(Byte value) {
		setInputflow(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public ChlorinecalculationRecord value11(Integer value) {
		setReloadtime(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public ChlorinecalculationRecord value12(Byte value) {
		setDemandclr(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public ChlorinecalculationRecord value13(Byte value) {
		setDemandactivechlorine(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public ChlorinecalculationRecord value14(Byte value) {
		setDemandcommonproduct(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public ChlorinecalculationRecord values(Timestamp value1, Integer value2, Integer value3, Integer value4, String value5, Short value6, Short value7, Short value8, Byte value9, Byte value10, Integer value11, Byte value12, Byte value13, Byte value14) {
		value1(value1);
		value2(value2);
		value3(value3);
		value4(value4);
		value5(value5);
		value6(value6);
		value7(value7);
		value8(value8);
		value9(value9);
		value10(value10);
		value11(value11);
		value12(value12);
		value13(value13);
		value14(value14);
		return this;
	}

	// -------------------------------------------------------------------------
	// Constructors
	// -------------------------------------------------------------------------

	/**
	 * Create a detached ChlorinecalculationRecord
	 */
	public ChlorinecalculationRecord() {
		super(Chlorinecalculation.CHLORINECALCULATION);
	}

	/**
	 * Create a detached, initialised ChlorinecalculationRecord
	 */
	public ChlorinecalculationRecord(Timestamp date, Integer watersystemCommunityIdcommunity, Integer watersystemIdwatersystem, Integer watersystemCommunitySubbasinIdsubbasin, String population, Short tankvolume, Short tankusefulvolume, Short endowment, Byte chlorinepureness, Byte inputflow, Integer reloadtime, Byte demandclr, Byte demandactivechlorine, Byte demandcommonproduct) {
		super(Chlorinecalculation.CHLORINECALCULATION);

		setValue(0, date);
		setValue(1, watersystemCommunityIdcommunity);
		setValue(2, watersystemIdwatersystem);
		setValue(3, watersystemCommunitySubbasinIdsubbasin);
		setValue(4, population);
		setValue(5, tankvolume);
		setValue(6, tankusefulvolume);
		setValue(7, endowment);
		setValue(8, chlorinepureness);
		setValue(9, inputflow);
		setValue(10, reloadtime);
		setValue(11, demandclr);
		setValue(12, demandactivechlorine);
		setValue(13, demandcommonproduct);
	}
}
