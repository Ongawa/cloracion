/**
 * This class is generated by jOOQ
 */
package org.ongawa.peru.chlorination.persistence.db.jooq.tables.records;


import java.sql.Timestamp;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Record14;
import org.jooq.Record4;
import org.jooq.Row14;
import org.jooq.impl.UpdatableRecordImpl;
import org.ongawa.peru.chlorination.persistence.db.jooq.tables.Chlorinecalculation;


/**
 * This class is generated by jOOQ.
 */
@Generated(
	value = {
		"http://www.jooq.org",
		"jOOQ version:3.7.2"
	},
	comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class ChlorinecalculationRecord extends UpdatableRecordImpl<ChlorinecalculationRecord> implements Record14<Timestamp, Integer, Integer, Integer, Integer, Double, Double, Double, Double, Double, Double, Double, Double, Double> {

	private static final long serialVersionUID = -795048916;

	/**
	 * Setter for <code>PUBLIC.CHLORINECALCULATION.DATE</code>.
	 */
	public void setDate(Timestamp value) {
		setValue(0, value);
	}

	/**
	 * Getter for <code>PUBLIC.CHLORINECALCULATION.DATE</code>.
	 */
	public Timestamp getDate() {
		return (Timestamp) getValue(0);
	}

	/**
	 * Setter for <code>PUBLIC.CHLORINECALCULATION.WATERSYSTEM_COMMUNITY_IDCOMMUNITY</code>.
	 */
	public void setWatersystemCommunityIdcommunity(Integer value) {
		setValue(1, value);
	}

	/**
	 * Getter for <code>PUBLIC.CHLORINECALCULATION.WATERSYSTEM_COMMUNITY_IDCOMMUNITY</code>.
	 */
	public Integer getWatersystemCommunityIdcommunity() {
		return (Integer) getValue(1);
	}

	/**
	 * Setter for <code>PUBLIC.CHLORINECALCULATION.WATERSYSTEM_IDWATERSYSTEM</code>.
	 */
	public void setWatersystemIdwatersystem(Integer value) {
		setValue(2, value);
	}

	/**
	 * Getter for <code>PUBLIC.CHLORINECALCULATION.WATERSYSTEM_IDWATERSYSTEM</code>.
	 */
	public Integer getWatersystemIdwatersystem() {
		return (Integer) getValue(2);
	}

	/**
	 * Setter for <code>PUBLIC.CHLORINECALCULATION.WATERSYSTEM_COMMUNITY_SUBBASIN_IDSUBBASIN</code>.
	 */
	public void setWatersystemCommunitySubbasinIdsubbasin(Integer value) {
		setValue(3, value);
	}

	/**
	 * Getter for <code>PUBLIC.CHLORINECALCULATION.WATERSYSTEM_COMMUNITY_SUBBASIN_IDSUBBASIN</code>.
	 */
	public Integer getWatersystemCommunitySubbasinIdsubbasin() {
		return (Integer) getValue(3);
	}

	/**
	 * Setter for <code>PUBLIC.CHLORINECALCULATION.POPULATION</code>.
	 */
	public void setPopulation(Integer value) {
		setValue(4, value);
	}

	/**
	 * Getter for <code>PUBLIC.CHLORINECALCULATION.POPULATION</code>.
	 */
	public Integer getPopulation() {
		return (Integer) getValue(4);
	}

	/**
	 * Setter for <code>PUBLIC.CHLORINECALCULATION.TANKVOLUME</code>.
	 */
	public void setTankvolume(Double value) {
		setValue(5, value);
	}

	/**
	 * Getter for <code>PUBLIC.CHLORINECALCULATION.TANKVOLUME</code>.
	 */
	public Double getTankvolume() {
		return (Double) getValue(5);
	}

	/**
	 * Setter for <code>PUBLIC.CHLORINECALCULATION.TANKUSEFULVOLUME</code>.
	 */
	public void setTankusefulvolume(Double value) {
		setValue(6, value);
	}

	/**
	 * Getter for <code>PUBLIC.CHLORINECALCULATION.TANKUSEFULVOLUME</code>.
	 */
	public Double getTankusefulvolume() {
		return (Double) getValue(6);
	}

	/**
	 * Setter for <code>PUBLIC.CHLORINECALCULATION.ENDOWMENT</code>. m^3/persona x dia
	 */
	public void setEndowment(Double value) {
		setValue(7, value);
	}

	/**
	 * Getter for <code>PUBLIC.CHLORINECALCULATION.ENDOWMENT</code>. m^3/persona x dia
	 */
	public Double getEndowment() {
		return (Double) getValue(7);
	}

	/**
	 * Setter for <code>PUBLIC.CHLORINECALCULATION.CHLORINEPURENESS</code>. Expresado en tanto por 1
	 */
	public void setChlorinepureness(Double value) {
		setValue(8, value);
	}

	/**
	 * Getter for <code>PUBLIC.CHLORINECALCULATION.CHLORINEPURENESS</code>. Expresado en tanto por 1
	 */
	public Double getChlorinepureness() {
		return (Double) getValue(8);
	}

	/**
	 * Setter for <code>PUBLIC.CHLORINECALCULATION.INPUTFLOW</code>. Medido en litros/segundo
	 */
	public void setInputflow(Double value) {
		setValue(9, value);
	}

	/**
	 * Getter for <code>PUBLIC.CHLORINECALCULATION.INPUTFLOW</code>. Medido en litros/segundo
	 */
	public Double getInputflow() {
		return (Double) getValue(9);
	}

	/**
	 * Setter for <code>PUBLIC.CHLORINECALCULATION.RELOADTIME</code>. Medido en días
	 */
	public void setReloadtime(Double value) {
		setValue(10, value);
	}

	/**
	 * Getter for <code>PUBLIC.CHLORINECALCULATION.RELOADTIME</code>. Medido en días
	 */
	public Double getReloadtime() {
		return (Double) getValue(10);
	}

	/**
	 * Setter for <code>PUBLIC.CHLORINECALCULATION.DEMANDCLR</code>. Medido en mg/litro
	 */
	public void setDemandclr(Double value) {
		setValue(11, value);
	}

	/**
	 * Getter for <code>PUBLIC.CHLORINECALCULATION.DEMANDCLR</code>. Medido en mg/litro
	 */
	public Double getDemandclr() {
		return (Double) getValue(11);
	}

	/**
	 * Setter for <code>PUBLIC.CHLORINECALCULATION.DEMANDACTIVECHLORINE</code>. Medido en mg/litro
	 */
	public void setDemandactivechlorine(Double value) {
		setValue(12, value);
	}

	/**
	 * Getter for <code>PUBLIC.CHLORINECALCULATION.DEMANDACTIVECHLORINE</code>. Medido en mg/litro
	 */
	public Double getDemandactivechlorine() {
		return (Double) getValue(12);
	}

	/**
	 * Setter for <code>PUBLIC.CHLORINECALCULATION.DEMANDCOMMONPRODUCT</code>. Medido en mg/litro
	 */
	public void setDemandcommonproduct(Double value) {
		setValue(13, value);
	}

	/**
	 * Getter for <code>PUBLIC.CHLORINECALCULATION.DEMANDCOMMONPRODUCT</code>. Medido en mg/litro
	 */
	public Double getDemandcommonproduct() {
		return (Double) getValue(13);
	}

	// -------------------------------------------------------------------------
	// Primary key information
	// -------------------------------------------------------------------------

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Record4<Timestamp, Integer, Integer, Integer> key() {
		return (Record4) super.key();
	}

	// -------------------------------------------------------------------------
	// Record14 type implementation
	// -------------------------------------------------------------------------

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Row14<Timestamp, Integer, Integer, Integer, Integer, Double, Double, Double, Double, Double, Double, Double, Double, Double> fieldsRow() {
		return (Row14) super.fieldsRow();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Row14<Timestamp, Integer, Integer, Integer, Integer, Double, Double, Double, Double, Double, Double, Double, Double, Double> valuesRow() {
		return (Row14) super.valuesRow();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<Timestamp> field1() {
		return Chlorinecalculation.CHLORINECALCULATION.DATE;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<Integer> field2() {
		return Chlorinecalculation.CHLORINECALCULATION.WATERSYSTEM_COMMUNITY_IDCOMMUNITY;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<Integer> field3() {
		return Chlorinecalculation.CHLORINECALCULATION.WATERSYSTEM_IDWATERSYSTEM;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<Integer> field4() {
		return Chlorinecalculation.CHLORINECALCULATION.WATERSYSTEM_COMMUNITY_SUBBASIN_IDSUBBASIN;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<Integer> field5() {
		return Chlorinecalculation.CHLORINECALCULATION.POPULATION;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<Double> field6() {
		return Chlorinecalculation.CHLORINECALCULATION.TANKVOLUME;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<Double> field7() {
		return Chlorinecalculation.CHLORINECALCULATION.TANKUSEFULVOLUME;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<Double> field8() {
		return Chlorinecalculation.CHLORINECALCULATION.ENDOWMENT;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<Double> field9() {
		return Chlorinecalculation.CHLORINECALCULATION.CHLORINEPURENESS;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<Double> field10() {
		return Chlorinecalculation.CHLORINECALCULATION.INPUTFLOW;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<Double> field11() {
		return Chlorinecalculation.CHLORINECALCULATION.RELOADTIME;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<Double> field12() {
		return Chlorinecalculation.CHLORINECALCULATION.DEMANDCLR;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<Double> field13() {
		return Chlorinecalculation.CHLORINECALCULATION.DEMANDACTIVECHLORINE;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<Double> field14() {
		return Chlorinecalculation.CHLORINECALCULATION.DEMANDCOMMONPRODUCT;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Timestamp value1() {
		return getDate();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Integer value2() {
		return getWatersystemCommunityIdcommunity();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Integer value3() {
		return getWatersystemIdwatersystem();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Integer value4() {
		return getWatersystemCommunitySubbasinIdsubbasin();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Integer value5() {
		return getPopulation();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Double value6() {
		return getTankvolume();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Double value7() {
		return getTankusefulvolume();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Double value8() {
		return getEndowment();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Double value9() {
		return getChlorinepureness();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Double value10() {
		return getInputflow();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Double value11() {
		return getReloadtime();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Double value12() {
		return getDemandclr();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Double value13() {
		return getDemandactivechlorine();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Double value14() {
		return getDemandcommonproduct();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public ChlorinecalculationRecord value1(Timestamp value) {
		setDate(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public ChlorinecalculationRecord value2(Integer value) {
		setWatersystemCommunityIdcommunity(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public ChlorinecalculationRecord value3(Integer value) {
		setWatersystemIdwatersystem(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public ChlorinecalculationRecord value4(Integer value) {
		setWatersystemCommunitySubbasinIdsubbasin(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public ChlorinecalculationRecord value5(Integer value) {
		setPopulation(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public ChlorinecalculationRecord value6(Double value) {
		setTankvolume(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public ChlorinecalculationRecord value7(Double value) {
		setTankusefulvolume(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public ChlorinecalculationRecord value8(Double value) {
		setEndowment(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public ChlorinecalculationRecord value9(Double value) {
		setChlorinepureness(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public ChlorinecalculationRecord value10(Double value) {
		setInputflow(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public ChlorinecalculationRecord value11(Double value) {
		setReloadtime(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public ChlorinecalculationRecord value12(Double value) {
		setDemandclr(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public ChlorinecalculationRecord value13(Double value) {
		setDemandactivechlorine(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public ChlorinecalculationRecord value14(Double value) {
		setDemandcommonproduct(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public ChlorinecalculationRecord values(Timestamp value1, Integer value2, Integer value3, Integer value4, Integer value5, Double value6, Double value7, Double value8, Double value9, Double value10, Double value11, Double value12, Double value13, Double value14) {
		value1(value1);
		value2(value2);
		value3(value3);
		value4(value4);
		value5(value5);
		value6(value6);
		value7(value7);
		value8(value8);
		value9(value9);
		value10(value10);
		value11(value11);
		value12(value12);
		value13(value13);
		value14(value14);
		return this;
	}

	// -------------------------------------------------------------------------
	// Constructors
	// -------------------------------------------------------------------------

	/**
	 * Create a detached ChlorinecalculationRecord
	 */
	public ChlorinecalculationRecord() {
		super(Chlorinecalculation.CHLORINECALCULATION);
	}

	/**
	 * Create a detached, initialised ChlorinecalculationRecord
	 */
	public ChlorinecalculationRecord(Timestamp date, Integer watersystemCommunityIdcommunity, Integer watersystemIdwatersystem, Integer watersystemCommunitySubbasinIdsubbasin, Integer population, Double tankvolume, Double tankusefulvolume, Double endowment, Double chlorinepureness, Double inputflow, Double reloadtime, Double demandclr, Double demandactivechlorine, Double demandcommonproduct) {
		super(Chlorinecalculation.CHLORINECALCULATION);

		setValue(0, date);
		setValue(1, watersystemCommunityIdcommunity);
		setValue(2, watersystemIdwatersystem);
		setValue(3, watersystemCommunitySubbasinIdsubbasin);
		setValue(4, population);
		setValue(5, tankvolume);
		setValue(6, tankusefulvolume);
		setValue(7, endowment);
		setValue(8, chlorinepureness);
		setValue(9, inputflow);
		setValue(10, reloadtime);
		setValue(11, demandclr);
		setValue(12, demandactivechlorine);
		setValue(13, demandcommonproduct);
	}
}
